#include <iostream>
#include <SDL2/SDL.h>

using namespace std;

const int WIDTH = 640, HEIGHT = 360;

int main ( int argc, char *argv[])
{
    SDL_Surface *imageSurface = NULL;
    SDL_Surface *windowSurface = NULL;
    SDL_Init(SDL_INIT_EVERYTHING);

    SDL_Window *window = SDL_CreateWindow("Galaga", SDL_WINDOWPOS_UNDEFINED,
                                           SDL_WINDOWPOS_UNDEFINED, WIDTH, HEIGHT,
                                           SDL_WINDOW_ALLOW_HIGHDPI );

     //to get a surface for a window that is previously created
     windowSurface = SDL_GetWindowSurface( window );

     // Check that window was successfully made
     if (NULL == window)
     {
        // In the case that the window could not be made
        cout << "Could not create window" << SDL_GetError() << endl;

        return EXIT_FAILURE;
     }

     SDL_Event windowEvent;

    // imageSurface = SDL_LoadBMP()

     while (true)
     {
         if (SDL_PollEvent( &windowEvent))
         {
             if (SDL_QUIT == windowEvent.type)
             {
                 break;
             }
         }
     }

     SDL_DestroyWindow(window);
     SDL_Quit();

    return EXIT_SUCCESS;
}
